{"version":3,"sources":["components/js/AutoComplete.js","components/js/Listing.js","components/js/ImageGrid.js","components/js/Details.js","components/js/Map.js","components/js/ScrollParallax.js","components/js/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["AutoComplete","state","value","suggestions","response","renderSuggestion","suggestion","className","name","onChange","event","newValue","setState","config","headers","Authorization","onSuggestionsFetchRequested","axios","post","query","types","documents","fields","size","then","res","result","data","results","map","console","log","onSuggestionsClearRequested","handleButtonClick","props","get","params","word","lat","long","onDataReceived","catch","error","finally","this","debounce","inputProps","placeholder","getSuggestionValue","Button","variant","color","onClick","React","Component","AlignItemsList","makeStyles","theme","root","width","backgroundColor","palette","background","paper","position","overflow","maxHeight","inline","display","rest_list","prevProps","length","bid","bname","bcategories","bcity","blocation","brating","breview_count","btop_10","business_id","Card","style","height","List","pageSize","renderItem","item","key","Fragment","ListItem","alignItems","e","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Typography","component","Box","borderColor","Rating","disabled","Divider","useStyles","flexWrap","justifyContent","gridList","ImageGridList","useState","tileData","setTileData","setQuery","classes","rest_name","fetch_pics","GridList","cellHeight","cols","tile","GridListTile","img","RecipeReviewCard","media","margin","spacing","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","CardHeader","aria-label","action","paddingTop","title","subheader","baddress","CardMedia","index","Chip","label","clickable","CardContent","animation","indicators","lines","text","mapStyles","MapContainer","displayMarkers","id","store","lng","google","zoom","initialCenter","GoogleApiWrapper","apiKey","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","trans5","ScrollParallex","useSpring","xy","mass","tension","friction","set","onMouseMove","clientX","clientY","div","interpolate","NavBar","geInterval","getEnter","t","opacity","scale","getSplit","split","c","forEach","str","i","push","type","ease","delay","enter","interval","TweenOne","componentProps","letterSpacing","App","buttonClicked","marginRight","Grow","in","current_rest","transformOrigin","timeout","Fade","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aef31e2d.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Autosuggest from 'react-autosuggest'\nimport axios from 'axios'\nimport { debounce } from 'throttle-debounce'\nimport Button from '@material-ui/core/Button';\n\nimport '../css/autocomplete.css'\n\nclass AutoComplete extends React.Component {\n    state = {\n        value: '',\n        suggestions: [],\n        response: \"\"\n    };\n\n    componentWillMount() {\n        this.onSuggestionsFetchRequested = debounce(\n            500,\n            this.onSuggestionsFetchRequested\n        )\n    }\n\n    renderSuggestion = suggestion => {\n        return (\n            <div className=\"result\">\n                <div>{suggestion.name}</div>\n            </div>\n        )\n    };\n\n    onChange = (event, { newValue }) => {\n        this.setState({ value: newValue })\n    };\n\n\n    config = {\n        headers: { Authorization: `Bearer ${'search-wjvmi2deimj35bjhyedbpiac'}` }\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        axios\n            .post('https://8c3f927e06874e2990808e9b6c03f56c.app-search.us-west1.gcp.cloud.es.io/api/as/v1/engines/restaurant-search-query/query_suggestion',\n                {query: value, types: {documents: {fields: [\"text\"]}}, size: 10}, this.config\n            )\n            .then(res => {\n\n                const result = res.data.results.documents.map(\n                    suggestion => ({\n                            name: suggestion.suggestion\n                        })\n                );\n                console.log(result);\n                this.setState({ suggestions: result });\n                console.log(this.state.suggestions)\n            })\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({ suggestions: [] })\n    };\n\n    handleButtonClick = () => {\n        this.props.handleButtonClick();\n        axios.get('http://104.198.7.64/dashboard', {\n            params: {\n                word: this.state.value,\n                lat: this.props.lat,\n                long: this.props.long\n            }\n        })\n            .then((res) => {\n                console.log(res)\n                this.setState({response: res})\n                this.props.onDataReceived(this.state.response);\n            })\n            .catch((error) => {\n                // handle error\n                console.log(error);\n            })\n            .finally(() => {\n                // always executed\n            });\n\n    }\n\n    render() {\n        const { value, suggestions } = this.state;\n\n        const inputProps = {\n            placeholder: 'Enter a search query...',\n            value,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"autocomplete-container\">\n                <Autosuggest\n                    className=\"search-query-suggestion-input\"\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={suggestion => suggestion.name}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}/>\n\n                <div className=\"search-button-container\">\n                    <Button className=\"search-button-query\" variant=\"outlined\" size=\"large\" color=\"primary\">Get Location</Button>\n                    <Button className=\"search-button-search\" variant=\"outlined\" size=\"large\" color=\"primary\" onClick={this.handleButtonClick}>Search</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AutoComplete;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport PaginationList from 'react-pagination-list';\n\nimport '../css/listing.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: '82vh',\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\n// const classes = useStyles();\nclass AlignItemsList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        data : this.props.rest_list.data\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.rest_list.length == 0 && this.props.rest_list.length != 0) {\n            console.log('Biljith', 1)\n            this.props.onClick({bid: this.props.rest_list.data[0][\"business_id\"], bname: this.props.rest_list.data[0][\"name\"],bcategories: this.props.rest_list.data[0][\"categories\"], bcity: this.props.rest_list.data[0][\"city\"],blocation : this.props.rest_list.data[0][\"location\"], brating : this.props.rest_list.data[0][\"rating\"], breview_count : this.props.rest_list.data[0][\"reviewCount\"], btop_10: this.props.rest_list.data[0][\"top_10_reviews\"]})\n            return\n        } else if (prevProps.rest_list.data[0].business_id != this.props.rest_list.data[0].business_id && prevProps.rest_list.data.length != this.props.rest_list.data.length) {\n            console.log('Biljith', 2)\n            this.props.onClick({bid: this.props.rest_list.data[0][\"business_id\"], bname: this.props.rest_list.data[0][\"name\"],bcategories: this.props.rest_list.data[0][\"categories\"], bcity: this.props.rest_list.data[0][\"city\"],blocation : this.props.rest_list.data[0][\"location\"], brating : this.props.rest_list.data[0][\"rating\"], breview_count : this.props.rest_list.data[0][\"reviewCount\"], btop_10: this.props.rest_list.data[0][\"top_10_reviews\"]})\n        }\n        else console.log('Biljith', 'poopoo')\n        //if ()//\n    }\n    render(){\n        const {\n            props,\n        } = this;\n        return (\n            <Card>\n            <div style={{height:'80vh'}}>\n                <List className=\"listing-parent\">\n                    <PaginationList \n                        data={props.rest_list.data}\n                        pageSize={5}\n                        renderItem={(item, key) => (\n                            <React.Fragment>\n                                <ListItem key={key} className={'list_item' + key} alignItems=\"flex-start\" onClick={((e) => props.onClick({bid: item[\"business_id\"], bname: item[\"name\"],bcategories: item[\"categories\"], bcity: item[\"city\"],blocation : item[\"location\"], brating : item[\"rating\"], breview_count : item[\"reviewCount\"], btop_10: item[\"top_10_reviews\"]}))}>\n                                    <ListItemAvatar>\n                                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                    primary={item[\"name\"]}\n                                    secondary={\n                                        <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className=\"display-inline\"\n                                            color=\"textSecondary\"\n                                        >\n                                            {item[\"streetAddress\"]}\n                                        </Typography>\n                                        <MDBRow>\n                                    <MDBCol><Typography variant=\"body2\" color=\"textSecondary\">{item[\"city\"]}</Typography></MDBCol>\n                                            <MDBCol><Box component=\"fieldset\" borderColor=\"transparent\">\n                                                        <Rating name=\"disabled\" value={item[\"rating\"]} disabled />\n                                                    </Box>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        </React.Fragment>\n                                    }\n                                    />\n\n                                </ListItem>\n                                <Divider variant=\"inset\" component=\"li\" />\n                            </React.Fragment>\n                        )}\n                    />\n                </List>\n            </div>\n            </Card>\n        );\n    }\n}\n\nexport default AlignItemsList;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { rest_list } from \"./Listing\";\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 350,\n  },\n}));\n\nlet tileData = []\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     cols: 2,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nfunction fetch_pics(rest_name, query, setTileData, setQuery) {\n\tif (rest_name != query) {\n\t\tconsole.log(rest_name, query)\n\t\tsetQuery(rest_name)\n\t\taxios.get('http://104.198.7.64/pics?query=' + rest_name)\n\t\t.then(response => {\n\t\t\tsetTileData(response.data)\n\t\t})\n\t}\n}\nexport default function ImageGridList(props) {\n\tconst [tileData, setTileData] = useState([]);\n\tconst [query, setQuery] = useState('');\n  const classes = useStyles();\n  fetch_pics(props.name, query, setTileData, setQuery);\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\n            <img src={tile.img}/>\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ImageGrid from \"./ImageGrid\";\nimport Carousel from 'react-material-ui-carousel';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport '../css/details.css';\nimport Trunk8 from 'react-trunk8';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    height: '82vh',\n  },\n  media: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\n// const classes = useStyles();\nconst items = [\"Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food!\",\"Decent!\",\"Bad Food!\"];\n\nclass RecipeReviewCard extends React.Component {\n  constructor(props) {\n      super(props);\n      }\n  state = {\n      btop_10 : this.props.btop_10\n  }\n  render(){\n\n    const {\n      props,\n    } = this;\n    // const btop_10 = props.btop_10\n    console.log(props.btop_10)\n    // console.log(props)\n    // rest_list = props.rest_list.data\n    // console.log(rest_list)\n    // current_rest = rest_list.find(x => x[\"business_id\"] === props.index)\n    // console.log(current_rest)\n\n    return(\n      <Card className=\"details-root\">\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className=\"details-avatar\">\n              R\n            </Avatar>\n          }\n          action={\n            <Box component=\"fieldset\" borderColor=\"transparent\" style={{paddingTop: \"5px\",}}>\n              <Rating name=\"disabled\" value={props.brating} disabled />\n            </Box>\n          }\n          title={props.bname}\n          subheader={props.baddress} \n        />\n        { props.bcategories && <CardMedia className=\"details-media padding_12_lr\">\n          {props.bcategories.map((item, index) => (\n            <Chip\n              label={item}\n              clickable\n              color=\"primary\"\n              variant=\"outlined\"\n              className=\"margin_4\"\n            />\n          ))}\n        </CardMedia> \n        }\n        <ImageGrid name={props.bname}/>\n      \n        <CardContent>\n        {props.btop_10 &&<Carousel animation=\"slide\" indicators=\"false\" className=\"MuiTypography-root MuiTypography-body2 MuiTypography-colorTextSecondary\">\n          {\n            props.btop_10.map( (item, index) => {\n                return <Trunk8 lines={4}> <Typography key={index}>{item.text}</Typography> </Trunk8>\n            })\n          }\n          </Carousel>}\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default RecipeReviewCard;\n\n","import React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  maxHeight: '80vh'\n};\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: {lat: this.props.lat, lng: this.props.lng}\n    }\n  }\n\n  displayMarkers = () => {\n      return <Marker id={0} position={{\n       lat: this.state.store.lat,\n       lng: this.state.store.lng\n     }}\n     onClick={() => console.log(\"You clicked me!\")} />\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lat !== this.props.lat && prevProps.lng !== this.props.lng) {\n      this.setState({\n        store: {lat: this.props.lat, lng: this.props.lng}\n      })\n    }\n  }\n\n  render() {\n\n    return (\n        <Map\n          google={this.props.google}\n          zoom={8}\n          style={mapStyles}\n          initialCenter={{ lat: 47.444, lng: -122.176}}\n        >\n          {this.displayMarkers()}\n        </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'YOUR_API_KEY'\n})(MapContainer);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSpring, animated } from 'react-spring'\nimport '../css/scrollparallax.css' // // Icons made by Freepik from www.flaticon.com\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\nconst trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`;\nconst trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`;\nconst trans3 = (x, y) => `translate3d(${x / 6 - 220}px,${y / 6 - 200}px,0)`;\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5 - 20}px,0)`;\nconst trans5 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 + 10}px,0)`;\n\nfunction ScrollParallex() {\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\n    return (\n        <div className={\"container\"} onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\n            <animated.div className={\"card1\"} style={{ transform: props.xy.interpolate(trans1) }} />\n            <animated.div className={\"card2\"} style={{ transform: props.xy.interpolate(trans2) }} />\n            <animated.div className={\"card3\"} style={{ transform: props.xy.interpolate(trans3) }} />\n            <animated.div className={\"card4\"} style={{ transform: props.xy.interpolate(trans4) }} />\n            <animated.div className={\"card5\"} style={{ transform: props.xy.interpolate(trans5) }} />\n\n        </div>\n    )\n}\n\nexport default ScrollParallex;","import React, { Component } from 'react';\nimport Texty from 'rc-texty';\nimport 'rc-texty/assets/index.css';\nimport TweenOne from 'rc-tween-one';\nimport '../css/navbar.css';\n\nclass NavBar extends Component {\n\n    geInterval = (e) => {\n        switch (e.index) {\n            case 0:\n                return 0;\n            case 1:\n                return 150;\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n                return 150 + 450 + (e.index - 2) * 10;\n            default:\n                return 150 + 450 + (e.index - 6) * 35;\n        }\n    }\n    getEnter = (e) => {\n        const t = {\n            opacity: 0,\n            scale: 0.8,\n            y: '-100%',\n        };\n        if (e.index >= 2 && e.index <= 6) {\n            return { ...t, y: '-30%', duration: 150 };\n        }\n        return t;\n    }\n\n    getSplit = (e) => {\n        const t = e.split(' ');\n        const c = [];\n        t.forEach((str, i) => {\n            c.push((\n                <span key={`${str}-${i}`}>\n          {str}\n        </span>\n            ));\n            if (i < t.length - 1) {\n                c.push(<span key={` -${i}`}> </span>);\n            }\n        });\n        return c;\n    }\n\n    render() {\n        return (\n            <div className=\"combined-wrapper\">\n\n                <div className=\"combined\">\n                    <div className=\"combined-shape\">\n                        <div className=\"shape-left\">\n                            <TweenOne\n                                animation={[\n                                    { x: 500, type: 'from', ease: 'easeInOutQuint', duration: 600 },\n                                    { x: -500, ease: 'easeInOutQuart', duration: 450, delay: -150 },\n                                ]}\n                            />\n                        </div>\n                        <div className=\"shape-right\">\n                            <TweenOne\n                                animation={[\n                                    { x: -500, type: 'from', ease: 'easeInOutQuint', duration: 600 },\n                                    { x: 500, ease: 'easeInOutQuart', duration: 450, delay: -150 },\n                                ]}\n                            />\n                        </div>\n                    </div>\n                    <Texty\n                        className=\"title\"\n                        type=\"flash\"\n                        delay={400}\n                        enter={this.getEnter}\n                        interval={this.geInterval}\n                        component={TweenOne}\n                        componentProps={{\n                            animation: [\n\n                                {\n                                    letterSpacing: 3,\n                                    scale: 1,\n                                    ease: 'easeInOutQuint',\n                                    duration: 300,\n                                }\n                            ],\n                        }}\n                    >\n                        Restaurant Recommender\n                    </Texty>\n                    <TweenOne\n                        className=\"combined-bar\"\n                        animation={{ delay: 2000, width: 0, x: 158, type: 'from', ease: 'easeInOutExpo' }}\n                    />\n                    <Texty\n                        className=\"content\"\n                        type=\"bottom\"\n                        split={this.getSplit}\n                        delay={2200}\n                        interval={30}\n                    >\n                        Finding restaurants was never easier!\n                    </Texty>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default NavBar;","import React from \"react\";\n\nimport AutoComplete from \"./components/js/AutoComplete\";\nimport AlignItemsList from \"./components/js/Listing\";\nimport RecipeReviewCard from \"./components/js/Details\";\nimport SimpleCard from \"./components/js/Map\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { geolocated } from \"react-geolocated\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grow from '@material-ui/core/Grow';\nimport ScrollParallex from \"./components/js/ScrollParallax\";\nimport Fade from \"@material-ui/core/Fade\";\nimport NavBar from \"./components/js/NavBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bid: '',\n      bname: '',\n      baddress: '',\n      bcategories: '',\n      bcity: '',\n      blocation: '47.69855629475769,-122.14184416996333',\n      brating: '',\n      breview_count: '',\n      btop_10: '',\n      response: '',\n      buttonClicked: false\n    }\n  }\n\n  onDataReceived = (response) => {\n    this.setState({response: response})\n  };\n\n  handleButtonClick = () => {\n      this.setState({buttonClicked: true})\n  };\n\n  render() {\n    return (\n      <div>\n          <NavBar/>\n        {/*{this.props.coords}*/}\n          <div>\n              <AutoComplete onDataReceived={this.onDataReceived} handleButtonClick={this.handleButtonClick} lat={40.01916} long={-105.2753}/>\n\n              { this.state.buttonClicked ? <div>\n                  <MDBRow style={{marginRight: '15px', marginLeft: '15px' }}>\n                      <Grow\n                          in={this.state.buttonClicked}>\n                          <MDBCol size=\"3\"><AlignItemsList rest_list={this.state.response} onClick={(current_rest) => {\n                              // this.setState({index:index})\n                              this.setState({ bid: current_rest.bid,\n                              bname: current_rest.bname ,\n                              baddress: current_rest.baddress,\n                              bcategories: current_rest.bcategories,\n                              bcity: current_rest.bcity,\n                              blocation: current_rest.blocation,\n                              brating: current_rest.brating,\n                              breview_count: current_rest.breview_count,\n                              btop_10: current_rest.btop_10})\n                              console.log(current_rest)\n                          }} />\n                          </MDBCol>\n                      </Grow>\n                      <Grow\n                          in={this.state.buttonClicked}\n                          style={{ transformOrigin: '0 0 0' }}\n                          {...(this.state.buttonClicked ? { timeout: 1000 } : {})}\n                      >\n                          <MDBCol size=\"5\"><RecipeReviewCard bid= {this.state.bid} bname= {this.state.bname}\n                              baddress= {this.state.baddress}\n                              bcategories= {this.state.bcategories}\n                              bcity= {this.state.bcity}\n                              blocation= {this.state.blocation}\n                              brating= {this.state.brating}\n                              breview_count= {this.state.breview_count}\n                              btop_10= {this.state.btop_10}/></MDBCol>\n                          {/* <MDBCol size=\"5\"></MDBCol> */}\n                      </Grow>\n\n                      <Grow\n                          in={this.state.buttonClicked}\n                          style={{ transformOrigin: '0 0 0' }}\n                          {...(this.state.buttonClicked ? { timeout: 2000 } : {})}\n                      >\n                          <MDBCol size=\"4\"><SimpleCard lat={this.state.blocation.split(',')[0]} lng={this.state.blocation.split(',')[1]}/></MDBCol>\n                          {/* <MDBCol size=\"4\"></MDBCol> */}\n                      </Grow>\n\n                  </MDBRow>\n              </div> : <Fade in={!this.state.buttonClicked}><ScrollParallex/></Fade> }\n\n\n          </div>\n      </div>\n    );\n  }\n}\n\n\nexport default geolocated({\n    positionOptions: {\n        enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/js/AutoComplete.js","components/js/Listing.js","components/js/ImageGrid.js","components/js/Details.js","components/js/Map.js","components/js/ScrollParallax.js","components/js/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["AutoComplete","state","value","suggestions","response","renderSuggestion","suggestion","className","name","onChange","event","newValue","setState","config","headers","Authorization","onSuggestionsFetchRequested","axios","post","query","types","documents","fields","size","then","res","result","data","results","map","console","log","onSuggestionsClearRequested","handleButtonClick","props","get","params","word","lat","long","onDataReceived","catch","error","finally","this","debounce","inputProps","placeholder","getSuggestionValue","Button","variant","color","onClick","React","Component","AlignItemsList","makeStyles","theme","root","width","backgroundColor","palette","background","paper","position","overflow","maxHeight","inline","display","rest_list","Card","style","height","List","pageSize","renderItem","item","key","Fragment","ListItem","alignItems","e","bid","bname","bcategories","bcity","blocation","brating","breview_count","btop_10","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Typography","component","Box","borderColor","Rating","disabled","Divider","useStyles","flexWrap","justifyContent","gridList","ImageGridList","useState","tileData","setTileData","setQuery","classes","rest_name","fetch_pics","GridList","cellHeight","cols","tile","GridListTile","img","RecipeReviewCard","media","margin","spacing","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","CardHeader","aria-label","action","paddingTop","title","subheader","baddress","CardMedia","index","Chip","label","clickable","CardContent","animation","indicators","text","mapStyles","MapContainer","displayMarkers","id","store","lng","prevProps","google","zoom","initialCenter","GoogleApiWrapper","apiKey","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","trans5","ScrollParallex","useSpring","xy","mass","tension","friction","set","onMouseMove","clientX","clientY","div","interpolate","NavBar","geInterval","getEnter","t","opacity","scale","getSplit","split","c","forEach","str","i","push","length","type","ease","delay","enter","interval","TweenOne","componentProps","letterSpacing","App","buttonClicked","marginRight","Grow","in","current_rest","transformOrigin","timeout","Fade","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0f91d891.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Autosuggest from 'react-autosuggest'\r\nimport axios from 'axios'\r\nimport { debounce } from 'throttle-debounce'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../css/autocomplete.css'\r\n\r\nclass AutoComplete extends React.Component {\r\n    state = {\r\n        value: '',\r\n        suggestions: [],\r\n        response: \"\"\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.onSuggestionsFetchRequested = debounce(\r\n            500,\r\n            this.onSuggestionsFetchRequested\r\n        )\r\n    }\r\n\r\n    renderSuggestion = suggestion => {\r\n        return (\r\n            <div className=\"result\">\r\n                <div>{suggestion.name}</div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({ value: newValue })\r\n    };\r\n\r\n\r\n    config = {\r\n        headers: { Authorization: `Bearer ${'search-wjvmi2deimj35bjhyedbpiac'}` }\r\n    };\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        axios\r\n            .post('https://8c3f927e06874e2990808e9b6c03f56c.app-search.us-west1.gcp.cloud.es.io/api/as/v1/engines/restaurant-search-query/query_suggestion',\r\n                {query: value, types: {documents: {fields: [\"text\"]}}, size: 10}, this.config\r\n            )\r\n            .then(res => {\r\n\r\n                const result = res.data.results.documents.map(\r\n                    suggestion => ({\r\n                            name: suggestion.suggestion\r\n                        })\r\n                );\r\n                console.log(result);\r\n                this.setState({ suggestions: result });\r\n                console.log(this.state.suggestions)\r\n            })\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({ suggestions: [] })\r\n    };\r\n\r\n    handleButtonClick = () => {\r\n        this.props.handleButtonClick();\r\n        axios.get('http://35.203.136.229/dashboard', {\r\n            params: {\r\n                word: this.state.value,\r\n                lat: this.props.lat,\r\n                long: this.props.long\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res)\r\n                this.setState({response: res})\r\n                this.props.onDataReceived(this.state.response);\r\n            })\r\n            .catch((error) => {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(() => {\r\n                // always executed\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n\r\n        const inputProps = {\r\n            placeholder: 'Enter a search query...',\r\n            value,\r\n            onChange: this.onChange\r\n        };\r\n\r\n        return (\r\n            <div className=\"autocomplete-container\">\r\n                <Autosuggest\r\n                    className=\"search-query-suggestion-input\"\r\n                    suggestions={suggestions}\r\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                    getSuggestionValue={suggestion => suggestion.name}\r\n                    renderSuggestion={this.renderSuggestion}\r\n                    inputProps={inputProps}/>\r\n\r\n                <div className=\"search-button-container\">\r\n                    <Button className=\"search-button-query\" variant=\"outlined\" size=\"large\" color=\"primary\">Get Location</Button>\r\n                    <Button className=\"search-button-search\" variant=\"outlined\" size=\"large\" color=\"primary\" onClick={this.handleButtonClick}>Search</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AutoComplete;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport PaginationList from 'react-pagination-list';\r\n\r\nimport '../css/listing.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'relative',\r\n    overflow: 'auto',\r\n    maxHeight: '82vh',\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nconst rest_list = [\r\n    {   rest_id: 1,\r\n        rest_name: 'Taco Bell',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n        lat: 47.69855629475769,\r\n        lng: -122.14184416996333,\r\n        categories: ['Taco', 'Mexican','Cuisine']\r\n    },\r\n    {\r\n        rest_id: 2,\r\n        rest_name: 'Subway',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n        lat: 47.50855629475769,\r\n        lng: -122.14174416996333\r\n    },\r\n    {   rest_id: 1,\r\n        rest_name: 'Dominos',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {\r\n        rest_id: 2,\r\n        rest_name: '3',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {   rest_id: 1,\r\n        rest_name: 'Taco Bell',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {\r\n        rest_id: 2,\r\n        rest_name: 'Taco Bell',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {   rest_id: 1,\r\n        rest_name: 'Taco Bell',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {\r\n        rest_id: 2,\r\n        rest_name: 'Taco Bell',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {   rest_id: 1,\r\n        rest_name: 'Taco Bell',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {\r\n        rest_id: 2,\r\n        rest_name: 'Taco Bell',\r\n        rest_hours: '9-5',\r\n        rest_stars: 3,\r\n    },\r\n    {\r\n        rest_id: 99,\r\n        rest_name: 'XYZ',\r\n        rest_hours: '9-9',\r\n        rest_stars: 1,\r\n    },\r\n  ];\r\nexport { rest_list };\r\n\r\n// const classes = useStyles();\r\nclass AlignItemsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        }\r\n    state = {\r\n        data : this.props.rest_list.data\r\n    }\r\n    render(){\r\n        const {\r\n            props,\r\n        } = this;\r\n        return (\r\n            <Card>\r\n            <div style={{height:'82vh'}}>\r\n                <List className=\"listing-parent\">\r\n                    <PaginationList \r\n                        data={props.rest_list.data}\r\n                        pageSize={10}\r\n                        renderItem={(item, key) => (\r\n                            <React.Fragment>\r\n                                <ListItem key={key}alignItems=\"flex-start\" onClick={((e) => props.onClick({bid: item[\"business_id\"], bname: item[\"name\"],bcategories: item[\"categories\"], bcity: item[\"city\"],blocation : item[\"location\"], brating : item[\"rating\"], breview_count : item[\"reviewCount\"], btop_10: item[\"top_10_reviews\"]}))}>\r\n                                    <ListItemAvatar>\r\n                                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                    primary={item[\"name\"]}\r\n                                    secondary={\r\n                                        <React.Fragment>\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"body2\"\r\n                                            className=\"display-inline\"\r\n                                            color=\"textSecondary\"\r\n                                        >\r\n                                            {item[\"streetAddress\"]}\r\n                                        </Typography>\r\n                                        <MDBRow>\r\n                                    <MDBCol><Typography variant=\"body2\" color=\"textSecondary\">{item[\"city\"]}</Typography></MDBCol>\r\n                                            <MDBCol><Box component=\"fieldset\" borderColor=\"transparent\">\r\n                                                        <Rating name=\"disabled\" value={item[\"rating\"]} disabled />\r\n                                                    </Box>\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    />\r\n\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                </List>\r\n            </div>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlignItemsList;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { rest_list } from \"./Listing\";\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n}));\r\n\r\nlet tileData = []\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     cols: 2,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\n\r\nfunction fetch_pics(rest_name, query, setTileData, setQuery) {\r\n\tif (rest_name != query) {\r\n\t\tconsole.log(rest_name, query)\r\n\t\tsetQuery(rest_name)\r\n\t\taxios.get('http://localhost:5000/pics?query=' + rest_name)\r\n\t\t.then(response => {\r\n\t\t\tsetTileData(response.data)\r\n\t\t})\r\n\t}\r\n}\r\nexport default function ImageGridList(props) {\r\n\tconst [tileData, setTileData] = useState([]);\r\n\tconst [query, setQuery] = useState('');\r\n  const classes = useStyles();\r\n  fetch_pics(props.name, query, setTileData, setQuery);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n        {tileData.map((tile) => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <img src={tile.img}/>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { rest_list } from \"./Listing\";\r\nimport ImageGrid from \"./ImageGrid\";\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport '../css/details.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n    height: '82vh',\r\n  },\r\n  media: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\n// const classes = useStyles();\r\nconst items = [\"Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food! Good Food!\",\"Decent!\",\"Bad Food!\"];\r\n\r\nclass RecipeReviewCard extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      }\r\n  state = {\r\n      btop_10 : this.props.btop_10\r\n  }\r\n  render(){\r\n\r\n    const {\r\n      props,\r\n    } = this;\r\n    // const btop_10 = props.btop_10\r\n    console.log(props.btop_10)\r\n    // console.log(props)\r\n    // rest_list = props.rest_list.data\r\n    // console.log(rest_list)\r\n    // current_rest = rest_list.find(x => x[\"business_id\"] === props.index)\r\n    // console.log(current_rest)\r\n\r\n    return(\r\n      <Card className=\"details-root\">\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className=\"details-avatar\">\r\n              R\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <Box component=\"fieldset\" borderColor=\"transparent\" style={{paddingTop: \"5px\",}}>\r\n              <Rating name=\"disabled\" value={props.brating} disabled />\r\n            </Box>\r\n          }\r\n          title={props.bname}\r\n          subheader={props.baddress} \r\n        />\r\n        { props.bcategories && <CardMedia className=\"details-media padding_12_lr\">\r\n          {props.bcategories.map((item, index) => (\r\n            <Chip\r\n              label={item}\r\n              clickable\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              className=\"margin_4\"\r\n            />\r\n          ))}\r\n        </CardMedia> \r\n        }\r\n        <ImageGrid name={props.bname}/>\r\n      \r\n        <CardContent>\r\n        {props.btop_10 &&<Carousel animation=\"slide\" indicators=\"false\" className=\"MuiTypography-root MuiTypography-body2 MuiTypography-colorTextSecondary\">\r\n          {\r\n            props.btop_10.map( (item, index) => {\r\n                return <Typography key={index}>{item.text}</Typography>\r\n            })\r\n          }\r\n          </Carousel>}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeReviewCard;\r\n\r\n","import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  maxHeight: '82vh'\r\n};\r\n\r\nexport class MapContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store: {lat: this.props.lat, lng: this.props.lng}\r\n    }\r\n  }\r\n\r\n  displayMarkers = () => {\r\n      return <Marker id={0} position={{\r\n       lat: this.state.store.lat,\r\n       lng: this.state.store.lng\r\n     }}\r\n     onClick={() => console.log(\"You clicked me!\")} />\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lat !== this.props.lat && prevProps.lng !== this.props.lng) {\r\n      this.setState({\r\n        store: {lat: this.props.lat, lng: this.props.lng}\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={8}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: 47.444, lng: -122.176}}\r\n        >\r\n          {this.displayMarkers()}\r\n        </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'YOUR_API_KEY'\r\n})(MapContainer);\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport '../css/scrollparallax.css' // // Icons made by Freepik from www.flaticon.com\r\n\r\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\r\nconst trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`;\r\nconst trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`;\r\nconst trans3 = (x, y) => `translate3d(${x / 6 - 220}px,${y / 6 - 200}px,0)`;\r\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5 - 20}px,0)`;\r\nconst trans5 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 + 10}px,0)`;\r\n\r\nfunction ScrollParallex() {\r\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\r\n    return (\r\n        <div className={\"container\"} onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\r\n            <animated.div className={\"card1\"} style={{ transform: props.xy.interpolate(trans1) }} />\r\n            <animated.div className={\"card2\"} style={{ transform: props.xy.interpolate(trans2) }} />\r\n            <animated.div className={\"card3\"} style={{ transform: props.xy.interpolate(trans3) }} />\r\n            <animated.div className={\"card4\"} style={{ transform: props.xy.interpolate(trans4) }} />\r\n            <animated.div className={\"card5\"} style={{ transform: props.xy.interpolate(trans5) }} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScrollParallex;","import React, { Component } from 'react';\r\nimport Texty from 'rc-texty';\r\nimport 'rc-texty/assets/index.css';\r\nimport TweenOne from 'rc-tween-one';\r\nimport '../css/navbar.css';\r\n\r\nclass NavBar extends Component {\r\n\r\n    geInterval = (e) => {\r\n        switch (e.index) {\r\n            case 0:\r\n                return 0;\r\n            case 1:\r\n                return 150;\r\n            case 2:\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 6:\r\n                return 150 + 450 + (e.index - 2) * 10;\r\n            default:\r\n                return 150 + 450 + (e.index - 6) * 35;\r\n        }\r\n    }\r\n    getEnter = (e) => {\r\n        const t = {\r\n            opacity: 0,\r\n            scale: 0.8,\r\n            y: '-100%',\r\n        };\r\n        if (e.index >= 2 && e.index <= 6) {\r\n            return { ...t, y: '-30%', duration: 150 };\r\n        }\r\n        return t;\r\n    }\r\n\r\n    getSplit = (e) => {\r\n        const t = e.split(' ');\r\n        const c = [];\r\n        t.forEach((str, i) => {\r\n            c.push((\r\n                <span key={`${str}-${i}`}>\r\n          {str}\r\n        </span>\r\n            ));\r\n            if (i < t.length - 1) {\r\n                c.push(<span key={` -${i}`}> </span>);\r\n            }\r\n        });\r\n        return c;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"combined-wrapper\">\r\n\r\n                <div className=\"combined\">\r\n                    <div className=\"combined-shape\">\r\n                        <div className=\"shape-left\">\r\n                            <TweenOne\r\n                                animation={[\r\n                                    { x: 500, type: 'from', ease: 'easeInOutQuint', duration: 600 },\r\n                                    { x: -500, ease: 'easeInOutQuart', duration: 450, delay: -150 },\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"shape-right\">\r\n                            <TweenOne\r\n                                animation={[\r\n                                    { x: -500, type: 'from', ease: 'easeInOutQuint', duration: 600 },\r\n                                    { x: 500, ease: 'easeInOutQuart', duration: 450, delay: -150 },\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Texty\r\n                        className=\"title\"\r\n                        type=\"flash\"\r\n                        delay={400}\r\n                        enter={this.getEnter}\r\n                        interval={this.geInterval}\r\n                        component={TweenOne}\r\n                        componentProps={{\r\n                            animation: [\r\n\r\n                                {\r\n                                    letterSpacing: 3,\r\n                                    scale: 1,\r\n                                    ease: 'easeInOutQuint',\r\n                                    duration: 300,\r\n                                }\r\n                            ],\r\n                        }}\r\n                    >\r\n                        Restaurant Recommender\r\n                    </Texty>\r\n                    <TweenOne\r\n                        className=\"combined-bar\"\r\n                        animation={{ delay: 2000, width: 0, x: 158, type: 'from', ease: 'easeInOutExpo' }}\r\n                    />\r\n                    <Texty\r\n                        className=\"content\"\r\n                        type=\"bottom\"\r\n                        split={this.getSplit}\r\n                        delay={2200}\r\n                        interval={30}\r\n                    >\r\n                        Finding restaurants was never easier!\r\n                    </Texty>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\nimport AutoComplete from \"./components/js/AutoComplete\";\r\nimport AlignItemsList, { rest_list } from \"./components/js/Listing\";\r\nimport RecipeReviewCard from \"./components/js/Details\";\r\nimport SimpleCard from \"./components/js/Map\";\r\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport { geolocated } from \"react-geolocated\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Grow from '@material-ui/core/Grow';\r\nimport ScrollParallex from \"./components/js/ScrollParallax\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport NavBar from \"./components/js/NavBar\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bid: '',\r\n      bname: '',\r\n      baddress: '',\r\n      bcategories: '',\r\n      bcity: '',\r\n      blocation: '47.69855629475769,-122.14184416996333',\r\n      brating: '',\r\n      breview_count: '',\r\n      btop_10: '',\r\n      response: '',\r\n      buttonClicked: false\r\n    }\r\n  }\r\n\r\n  onDataReceived = (response) => {\r\n    this.setState({response: response})\r\n  };\r\n\r\n  handleButtonClick = () => {\r\n      this.setState({buttonClicked: true})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <NavBar/>\r\n        {/*{this.props.coords}*/}\r\n          <div>\r\n              <AutoComplete onDataReceived={this.onDataReceived} handleButtonClick={this.handleButtonClick} lat={40.01916} long={-105.2753}/>\r\n\r\n              { this.state.buttonClicked ? <div>\r\n                  <MDBRow style={{marginRight: '15px', marginLeft: '15px' }}>\r\n                      <Grow\r\n                          in={this.state.buttonClicked}>\r\n                          <MDBCol size=\"3\"><AlignItemsList rest_list={this.state.response} onClick={(current_rest) => {\r\n                              // this.setState({index:index})\r\n                              this.setState({ bid: current_rest.bid,\r\n                              bname: current_rest.bname ,\r\n                              baddress: current_rest.baddress,\r\n                              bcategories: current_rest.bcategories,\r\n                              bcity: current_rest.bcity,\r\n                              blocation: current_rest.blocation,\r\n                              brating: current_rest.brating,\r\n                              breview_count: current_rest.breview_count,\r\n                              btop_10: current_rest.btop_10})\r\n                              console.log(current_rest)\r\n                          }} />\r\n                          </MDBCol>\r\n                      </Grow>\r\n                      <Grow\r\n                          in={this.state.buttonClicked}\r\n                          style={{ transformOrigin: '0 0 0' }}\r\n                          {...(this.state.buttonClicked ? { timeout: 1000 } : {})}\r\n                      >\r\n                          <MDBCol size=\"5\"><RecipeReviewCard bid= {this.state.bid} bname= {this.state.bname}\r\n                              baddress= {this.state.baddress}\r\n                              bcategories= {this.state.bcategories}\r\n                              bcity= {this.state.bcity}\r\n                              blocation= {this.state.blocation}\r\n                              brating= {this.state.brating}\r\n                              breview_count= {this.state.breview_count}\r\n                              btop_10= {this.state.btop_10}/></MDBCol>\r\n                          {/* <MDBCol size=\"5\"></MDBCol> */}\r\n                      </Grow>\r\n\r\n                      <Grow\r\n                          in={this.state.buttonClicked}\r\n                          style={{ transformOrigin: '0 0 0' }}\r\n                          {...(this.state.buttonClicked ? { timeout: 2000 } : {})}\r\n                      >\r\n                          <MDBCol size=\"4\"><SimpleCard lat={this.state.blocation.split(',')[0]} lng={this.state.blocation.split(',')[1]}/></MDBCol>\r\n                          {/* <MDBCol size=\"4\"></MDBCol> */}\r\n                      </Grow>\r\n\r\n                  </MDBRow>\r\n              </div> : <Fade in={!this.state.buttonClicked}><ScrollParallex/></Fade> }\r\n\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}